{"name":"Fakerize","tagline":"A tool to de-identify production data","body":"# Fakerize\r\n\r\nA CLI that allows you to de-identify data in your database.\r\n\r\n    gem install fakerize\r\n    # create a config file\r\n    # run\r\n    fakerize database:convert mysql://user@localhost/mydb myconfig.yml\r\n\r\n\r\n## Why\r\n\r\nWe needed a way to quickly generate a demo system that has some real\r\ndata, but in a way that provided a complete de-identification of people\r\nin our database.  We wanted to make the process extensible and re-usable\r\nso that we can use for our future data stores.\r\n\r\n\r\n\r\n## Config File\r\n\r\nUsing a yaml config file that contians a list of tables\r\nwithin each table a list of fields to fakerize, then on each field it\r\ncontains the Faker Class and Method that needs to be called.\r\n\r\nHere is an example:\r\n\r\n    ---\r\n    models:\r\n      - \r\n        :name: :patients\r\n        :options:\r\n        - \r\n          :field: :last_name\r\n          :fakerize: Name.last_name\r\n        -\r\n          :field: :first_name\r\n          :fakerize: Name.first_name\r\n\r\n## Command Line\r\n\r\n    Just pass the Sequel Connection string\r\n\r\n    fakerize database:convert mysql://root@localhost/mydb my_config.yml\r\n    \r\n\r\n## Requirements\r\n\r\n* Ruby 1.9.2\r\n* Faker Gem\r\n* Sequel Gem\r\n* MySql Gem\r\n\r\n\r\n## ToDos\r\n\r\n* Setup Gemspec file\r\n* Add Plugin System to make the data modules datastore agnostic\r\n* Add a database clean functionality to remove data\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}